# -*- coding: utf-8 -*-
"""RAG - Restaurant Chatbot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LJhUxSVaf7HsRJahnMzwtbWJ7SMH9s-5

# Build a RAG chatbot for a Restaurant

This page shows you how to build a simple RAG chatbot in Python using Pinecone for the vector database and embedding model, [OpenAI](https://docs.pinecone.io/integrations/openai) for the LLM, and [LangChain](https://docs.pinecone.io/integrations/langchain) for the RAG workflow.

## Project Goals: Restaurant Chatbot

Our specific project aims to create an intelligent chatbot for a restaurant. This chatbot will:

1. Answer customer queries about the menu, including dish descriptions, prices, and ingredients.
2. Provide information about dietary options (vegetarian, gluten-free, etc.).
3. Assist with reservations and opening hours.
4. Offer personalized dish recommendations based on customer preferences.
5. Handle frequently asked questions about the restaurant's policies and services.



## Before you begin

Ensure you have the following:

- A [Pinecone account](https://app.pinecone.io/) and API key.  

- An [OpenAI account](https://platform.openai.com/) and API key.

## Set up your environment

Install the LangChain libraries required for this notebook:
"""

!pip install -qU \
    langchain-pinecone==0.1.3 \
    langchain-openai==0.1.8 \
    langchain-text-splitters==0.2.0 \
    langchain==0.2.1 \
    pinecone-notebooks==0.1.1

"""Set environment variables for your Pinecone and OpenAI API keys:

---


"""

import os
import numpy
# initialize connection to pinecone (orget API key at app.pinecone.io)
if not os.environ.get("PINECONE_API_KEY"):
    from pinecone_notebooks.colab import Authenticate
    Authenticate()

api_key = os.environ.get("PINECONE_API_KEY")

from google.colab import userdata
# available at platform.openai.com/api-keys
os.environ['OPENAI_API_KEY'] = userdata.get('openai_api')

"""## Store knowledge in Pinecone

For this guide, you'll use a document containing the menu of Bella Vista Italian Restaurant, a fictional establishment that LLMs do not have any information about. You'll use LangChain to chunk the document into smaller segments, convert each segment into vectors, and then upsert your vectors into your Pinecone index.

<details>
  <summary>Browse the document</summary>

```
# Bella Vista Italian Restaurant Menu

## Appetizers (Antipasti)

1. Bruschetta al Pomodoro - $12
   Toasted artisanal bread topped with a blend of ripe Roma tomatoes, fresh basil, and extra virgin olive oil. Finished with a drizzle of aged balsamic vinegar.

2. Caprese Salad - $14
   Slices of creamy buffalo mozzarella layered with vine-ripened tomatoes and fresh basil leaves. Drizzled with extra virgin olive oil and 12-year-aged balsamic glaze.

3. Calamari Fritti - $16
   Tender rings of calamari lightly dusted in seasoned flour and flash-fried to golden perfection. Served with our house-made spicy marinara sauce and lemon wedges.

## Main Courses (Primi Piatti)

4. Spaghetti alla Carbonara - $22
   Al dente spaghetti tossed in a creamy sauce made with farm-fresh eggs, pecorino Romano cheese, and crispy pancetta. Finished with freshly cracked black pepper and parsley.

5. Risotto ai Funghi Porcini - $26
   Arborio rice slowly cooked to creamy perfection with premium dried porcini mushrooms, white wine, and Parmigiano-Reggiano. Garnished with fresh thyme and truffle oil.

6. Lasagna alla Bolognese - $24
   Layers of fresh pasta sheets, rich meat ragù made with ground beef and pork, creamy béchamel sauce, and melted mozzarella. Baked until golden and bubbly.

## Second Courses (Secondi Piatti)

7. Osso Buco alla Milanese - $32
   Slow-braised veal shank in white wine and vegetables, topped with gremolata. Served with saffron risotto and roasted vegetables.

8. Branzino al Forno - $30
   Whole Mediterranean sea bass stuffed with lemon and herbs, oven-roasted and filleted tableside. Served with roasted potatoes and grilled asparagus.

9. Pollo al Marsala - $28
   Tender chicken breast sautéed with mushrooms in a rich Marsala wine sauce. Served with creamy polenta and seasonal vegetables.

## Desserts (Dolci)

10. Tiramisu - $12
    Layers of coffee-soaked ladyfingers and creamy mascarpone cheese, dusted with premium cocoa powder. Served with a shot of espresso on the side.

11. Panna Cotta - $10
    Silky vanilla bean infused cream custard, topped with a mixed berry compote and fresh mint.

12. Cannoli Siciliani - $9
    Two crispy pastry tubes filled with sweet ricotta cream, chocolate chips, and candied orange peel. Dusted with powdered sugar and served with pistachio gelato.

## Beverages (Bevande)

13. Espresso - $3.50
    Single shot of our premium Italian roast coffee

14. Cappuccino - $5
    Espresso topped with steamed milk and foam

15. Italian Sodas - $4.50
    Choice of flavors: Blood Orange, Lemon, or Raspberry

16. House Red Wine (glass) - $9 / (bottle) - $36
    Montepulciano d'Abruzzo - Medium-bodied with notes of cherry and spice

17. House White Wine (glass) - $8 / (bottle) - $32
    Pinot Grigio - Crisp and refreshing with hints of pear and citrus

Our dishes are prepared with the finest ingredients, including imported Italian products and locally sourced organic produce. Gluten-free and vegetarian options are available upon request. Buon appetito!
```

</details

Since your document is in Markdown, [chunk the content](https://www.pinecone.io/learn/chunking-strategies/) based on structure to get semantically coherent segments. In this case, `headers_to_split_on` specifies h2 headers as the indicators of where to split.
"""

from langchain_text_splitters import MarkdownHeaderTextSplitter


markdown_document = """
# Bella Vista Italian Restaurant Menu

## Appetizers (Antipasti)

1. Bruschetta al Pomodoro - $12
   Toasted artisanal bread topped with a blend of ripe Roma tomatoes, fresh basil, and extra virgin olive oil. Finished with a drizzle of aged balsamic vinegar.

2. Caprese Salad - $14
   Slices of creamy buffalo mozzarella layered with vine-ripened tomatoes and fresh basil leaves. Drizzled with extra virgin olive oil and 12-year-aged balsamic glaze.

3. Calamari Fritti - $16
   Tender rings of calamari lightly dusted in seasoned flour and flash-fried to golden perfection. Served with our house-made spicy marinara sauce and lemon wedges.

## Main Courses (Primi Piatti)

4. Spaghetti alla Carbonara - $22
   Al dente spaghetti tossed in a creamy sauce made with farm-fresh eggs, pecorino Romano cheese, and crispy pancetta. Finished with freshly cracked black pepper and parsley.

5. Risotto ai Funghi Porcini - $26
   Arborio rice slowly cooked to creamy perfection with premium dried porcini mushrooms, white wine, and Parmigiano-Reggiano. Garnished with fresh thyme and truffle oil.

6. Lasagna alla Bolognese - $24
   Layers of fresh pasta sheets, rich meat ragù made with ground beef and pork, creamy béchamel sauce, and melted mozzarella. Baked until golden and bubbly.

## Second Courses (Secondi Piatti)

7. Osso Buco alla Milanese - $32
   Slow-braised veal shank in white wine and vegetables, topped with gremolata. Served with saffron risotto and roasted vegetables.

8. Branzino al Forno - $30
   Whole Mediterranean sea bass stuffed with lemon and herbs, oven-roasted and filleted tableside. Served with roasted potatoes and grilled asparagus.

9. Pollo al Marsala - $28
   Tender chicken breast sautéed with mushrooms in a rich Marsala wine sauce. Served with creamy polenta and seasonal vegetables.

## Desserts (Dolci)

10. Tiramisu - $12
    Layers of coffee-soaked ladyfingers and creamy mascarpone cheese, dusted with premium cocoa powder. Served with a shot of espresso on the side.

11. Panna Cotta - $10
    Silky vanilla bean infused cream custard, topped with a mixed berry compote and fresh mint.

12. Cannoli Siciliani - $9
    Two crispy pastry tubes filled with sweet ricotta cream, chocolate chips, and candied orange peel. Dusted with powdered sugar and served with pistachio gelato.

## Beverages (Bevande)

13. Espresso - $3.50
    Single shot of our premium Italian roast coffee

14. Cappuccino - $5
    Espresso topped with steamed milk and foam

15. Italian Sodas - $4.50
    Choice of flavors: Blood Orange, Lemon, or Raspberry

16. House Red Wine (glass) - $9 / (bottle) - $36
    Montepulciano d'Abruzzo - Medium-bodied with notes of cherry and spice

17. House White Wine (glass) - $8 / (bottle) - $32
    Pinot Grigio - Crisp and refreshing with hints of pear and citrus

Our dishes are prepared with the finest ingredients, including imported Italian products and locally sourced organic produce. Gluten-free and vegetarian options are available upon request. Buon appetito!
"""

headers_to_split_on = [
    ("#", "Header 1"),
    ("##", "Header 2")
]

markdown_splitter = MarkdownHeaderTextSplitter(
    headers_to_split_on=headers_to_split_on, strip_headers=False
)
md_header_splits = markdown_splitter.split_text(markdown_document)

print(md_header_splits)

"""Initialize a LangChain embedding object. Note that this step uses a Pinecone API key you set as an environment variable earlier."""

from langchain_pinecone import PineconeEmbeddings

model_name = 'multilingual-e5-large'
embeddings = PineconeEmbeddings(
    model=model_name,
    pinecone_api_key=os.environ.get('PINECONE_API_KEY')
)

"""We initialize a new client instance for Pinecone:"""

from pinecone import Pinecone, ServerlessSpec

pc = Pinecone(api_key=os.environ.get("PINECONE_API_KEY"))


from pinecone import ServerlessSpec

cloud = os.environ.get('PINECONE_CLOUD') or 'aws'
region = os.environ.get('PINECONE_REGION') or 'us-east-1'

spec = ServerlessSpec(cloud=cloud, region=region)

"""Define our index name:"""

index_name = "italian-restaurant"

"""Now create a serverless index in Pinecone for storing the embeddings of your document, setting the index dimensions and distance metric to match those of the Pinecone `multilingual-e5-large` model you'll use to create the embeddings:


"""

import time

if index_name not in pc.list_indexes().names():
    pc.create_index(
        name=index_name,
        dimension=embeddings.dimension,
        metric="cosine",
        spec=spec
    )
    # wait for index to be ready
    while not pc.describe_index(index_name).status['ready']:
        time.sleep(1)

from langchain_pinecone import PineconeVectorStore

namespace = "italian-restaurant"

docsearch = PineconeVectorStore.from_documents(
    documents=md_header_splits,
    index_name=index_name,
    embedding=embeddings,
    namespace=namespace
)

time.sleep(1)


index = pc.Index(index_name)

for ids in index.list(namespace=namespace):
    query = index.query(
        id=ids[2],
        namespace=namespace,
        top_k=1,
        include_values=False,
        include_metadata=True
    )
    print(query)

from langchain_openai import ChatOpenAI
from langchain.chains import RetrievalQA

llm = ChatOpenAI(
    openai_api_key=os.environ.get('OPENAI_API_KEY'),
    model_name='gpt-3.5-turbo',
    temperature=0.0
)

qa = RetrievalQA.from_chain_type(
    llm=llm,
    chain_type="stuff",
    retriever=docsearch.as_retriever()
)

query1_with_knowledge = qa.invoke(query1)
query1_without_knowledge = llm.invoke(query1)

print(query1_with_knowledge)
print()
print(query1_without_knowledge)



query2_with_knowledge = qa.invoke(query2)
query2_without_knowledge = llm.invoke(query2)

print(query2_with_knowledge)
print()
print(query2_without_knowledge)
